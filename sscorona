package main

import (
	"net/http"
	"html/template"
	"fmt"
	"encoding/json"
)
type weatherReport []struct {
		ActiveCases    int    `json:"activeCases"`
		ActiveCasesNew int    `json:"activeCasesNew"`
		Recovered      int    `json:"recovered"`
		RecoveredNew   int    `json:"recoveredNew"`
		Deaths         int    `json:"deaths"`
		DeathsNew      int    `json:"deathsNew"`
		TotalCases     int    `json:"totalCases"`
		SourceURL      string `json:"sourceUrl"`
		ReadMe         string `json:"readMe"`
		RegionData     []struct {
			Region        string `json:"region"`
			TotalInfected int    `json:"totalInfected"`
			NewInfected   int    `json:"newInfected"`
			Recovered     int    `json:"recovered"`
			NewRecovered  int    `json:"newRecovered"`
			Deceased      int    `json:"deceased"`
			NewDeceased   int    `json:"newDeceased"`
		} `json:"regionData"`
	}

func main(){
	disp:=func(w http.ResponseWriter, r *http.Request){

		var Data  weatherReport

		endpoint := "https://api.apify.com/v2/datasets/UN6sYCDtyVSeD4REF/items"

		location := r.FormValue("city")

		res := endpoint + location

		req,err:=http.Get(res)

		defer req.Body.Close()

		fmt.Println(location)

		if(err!=nil){

			fmt.Println(err)
		}
		decoder:=json.NewDecoder(req.Body)

		er1 := decoder.Decode(&Data)



		if(er1!=nil){

			fmt.Println(er1)
		}
		wr,er := template.ParseFiles("weather.html")

		if er != nil{
			fmt.Println(wr)
			fmt.Println(location)
			fmt.Println(res)
			fmt.Println("wrong something")

		}else{
			wr.Execute(w,Data)
		}

	}

	input:=func(w http.ResponseWriter, r *http.Request){

		wr,er := template.ParseFiles("getCity.html")

		if er != nil{

			fmt.Print("Something was wrong")

		}else{

			wr.Execute(w,nil)

			fmt.Print("redirected")
		}
	}

	http.HandleFunc("/c",input)

	http.HandleFunc("/FindWeather",disp)
	http.ListenAndServe(":9229",nil)
}
